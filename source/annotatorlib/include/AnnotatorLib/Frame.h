// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef ANNOTATOR_ANNOTATORLIB_FRAME_H
#define ANNOTATOR_ANNOTATORLIB_FRAME_H

/************************************************************
 Frame class header
 ************************************************************/
#include <vector>

#include <AnnotatorLib/AnnotatorLibDatastructs.h>
#include <AnnotatorLib/annotatorlib_api.h>

#include "AnnotatorLib/Annotation.h"

namespace AnnotatorLib {

class Annotation;
class Attribute;

/************************************************************/

/**
 * @brief The Frame class
 * Representing a frame in a movie or an image.
 */
class ANNOTATORLIB_API Frame {
 public:
  Frame() = delete;
  Frame(unsigned long frame_nmb);
  ~Frame();

  bool operator>(const Frame& right);
  bool operator>=(const Frame& right);
  bool operator<(const Frame& right);
  bool operator<=(const Frame& right);
  bool operator==(const Frame& right);
  bool operator!=(const Frame& right);

  std::vector<Annotation*> getAnnotations() const;
  bool hasAnnotations() const;
  bool addAnnotation(Annotation* annotation);
  bool removeAnnotation(const Annotation* annotation);
  /**
   * @brief Checks if there is an annotation,
   * which belongs to the given object.
   * @param annotation
   */
  Object* getObject(const Object* obj) const;

  std::vector<Attribute*> getAttributes() const;

  unsigned long getFrameNumber() const;
  unsigned long getId( ) const { return getFrameNumber(); }

  bool equals(Frame* other) const;

 protected:
  /**
   *
   */
  const unsigned long frame_number;

 private:
  std::vector<Annotation*> annotations;
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

}  // of namespace AnnotatorLib

/************************************************************
 End of Frame class header
 ************************************************************/

#endif
